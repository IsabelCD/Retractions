install.packages("wooldridge")
getwd()
plot(wos_search1['SC'])
library(bibliometrix)
library(dplyr)
setwd('C:/Users/isabe/Desktop/Tese/Retractions')
####papers_abt_retractions####
wos_retracted_paper1 <- convert2df(file = "./papers_abt_retractions/wos_retracted_paper1.bib", dbsource = "wos", format = "bibtex")
wos_retracted_paper2 <- convert2df(file = "./papers_abt_retractions/wos_retracted_paper2.bib", dbsource = "wos", format = "bibtex")
wos_retracted_publication1 <- convert2df(file = "./papers_abt_retractions/wos_retracted_publication1.bib", dbsource = "wos", format = "bibtex")
wos_search1 <- mergeDbSources(wos_retracted_paper1, wos_retracted_paper2, wos_retracted_publication1, remove.duplicated = TRUE)
summary(wos_search1)
head(wos_search1)
wos_search1 <- dplyr::filter(wos_search1, (!grepl("RETRACTION", DT)) & (!grepl("RETRACTED PUBLICATION", DT)))
#View(wos_search)
#janitor::compare_df_cols(wos_retracted_paper1, wos_search)
write.xlsx(wos_search1, './papers_abt_retractions/wos_unido.xlsx', rowNames=FALSE)
write.table(wos_search1, './papers_abt_retractions/wos_unido.xlsx', rowNames=FALSE)
write.xlsx(wos_search1, './papers_abt_retractions/wos_unido.xlsx', rowNames=FALSE)
library(bibliometrix)
library(dplyr)
library(openxlsx)
setwd('C:/Users/isabe/Desktop/Tese/Retractions')
####papers_abt_retractions####
wos_retracted_paper1 <- convert2df(file = "./papers_abt_retractions/wos_retracted_paper1.bib", dbsource = "wos", format = "bibtex")
wos_retracted_paper2 <- convert2df(file = "./papers_abt_retractions/wos_retracted_paper2.bib", dbsource = "wos", format = "bibtex")
wos_retracted_publication1 <- convert2df(file = "./papers_abt_retractions/wos_retracted_publication1.bib", dbsource = "wos", format = "bibtex")
wos_search1 <- mergeDbSources(wos_retracted_paper1, wos_retracted_paper2, wos_retracted_publication1, remove.duplicated = TRUE)
summary(wos_search1)
head(wos_search1)
wos_search1 <- dplyr::filter(wos_search1, (!grepl("RETRACTION", DT)) & (!grepl("RETRACTED PUBLICATION", DT)))
#View(wos_search)
#janitor::compare_df_cols(wos_retracted_paper1, wos_search)
write.xlsx(wos_search1, './papers_abt_retractions/wos_unido.xlsx', rowNames=FALSE)
parcial <- wos_search1[, c("DI", "AU", "TI", "SO", "DT", "DE", "TC")]
resultados <- biblioAnalysis(wos_search1)
dados_sumarizados <- summary(object = resultados, k=20) #(20) qtd de elementos em cada analise
plot(wos_search1['SC'])
View(wos_search1)
hist(wos_search1['SC'])
count(wos_search1['SC'])
countplot(wos_search1['SC'])
library(ggplot2)
library(bibliometrix)
library(dplyr)
library(openxlsx)
library(ggplot2)
setwd('C:/Users/isabe/Desktop/Tese/Retractions')
####papers_abt_retractions####
wos_retracted_paper1 <- convert2df(file = "./papers_abt_retractions/wos_retracted_paper1.bib", dbsource = "wos", format = "bibtex")
wos_retracted_paper2 <- convert2df(file = "./papers_abt_retractions/wos_retracted_paper2.bib", dbsource = "wos", format = "bibtex")
wos_retracted_publication1 <- convert2df(file = "./papers_abt_retractions/wos_retracted_publication1.bib", dbsource = "wos", format = "bibtex")
wos_search1 <- mergeDbSources(wos_retracted_paper1, wos_retracted_paper2, wos_retracted_publication1, remove.duplicated = TRUE)
summary(wos_search1)
head(wos_search1)
wos_search1 <- dplyr::filter(wos_search1, (!grepl("RETRACTION", DT)) & (!grepl("RETRACTED PUBLICATION", DT)))
#View(wos_search)
#janitor::compare_df_cols(wos_retracted_paper1, wos_search)
write.xlsx(wos_search1, './papers_abt_retractions/wos_unido.xlsx', rowNames=FALSE)
# Summarize data to get counts for each category
summary_data <- wos_search1 %>%
group_by(sc) %>%
summarize(count = n())
# Summarize data to get counts for each category
summary_data <- wos_search1 %>%
group_by(SC) %>%
summarize(count = n())
# Create the bar chart
ggplot(summary_data, aes(x = sc, y = count, fill = sc)) +
geom_bar(stat = "identity") +
labs(title = "Bar Chart of Category Counts", x = "Category", y = "Count") +
theme(legend.position = "none")
# Create the bar chart
ggplot(summary_data, aes(x = SC, y = count, fill = SC)) +
geom_bar(stat = "identity") +
labs(title = "Bar Chart of Category Counts", x = "Category", y = "Count") +
theme(legend.position = "none")
# Create a table of counts for each category
category_counts <- table(wos_search1$SC)
# Sort the categories by count in descending order
sorted_categories <- names(sort(category_counts, decreasing = TRUE))
# Take the top 15 most frequent categories
top_categories <- head(sorted_categories, 15)
# Create a subset of data for the top categories
data_subset <- subset(your_data, SC %in% top_categories)
# Create a subset of data for the top categories
data_subset <- subset(wos_search1, SC %in% top_categories)
# Create the bar chart
ggplot(data_subset, aes(x = reorder(SC, -as.numeric(SC)), fill = SC)) +
geom_bar() +
coord_flip() +
labs(x = "Count", y = "Category") +
theme_minimal()
# Create the bar chart
ggplot(summary_data, aes(x = SC, y = count, fill = SC)) +
geom_bar(stat = "identity") +
labs(title = "Bar Chart of Category Counts", x = "Category", y = "Count") +
theme(legend.position = "none") +
coord_flip()
# Summarize data to get counts for each category
summary_data <- wos_search1 %>%
group_by(SC) %>%
summarize(count = n()) %>%
sort(count) #%>%
# Summarize data to get counts for each category
summary_data <- wos_search1 %>%
group_by(SC) %>%
summarize(count = n()) %>%
arrange(desc(count)) #%>%
# Create the bar chart
ggplot(summary_data, aes(x = SC, y = count, fill = SC)) +
geom_bar(stat = "identity") +
labs(title = "Bar Chart of Category Counts", x = "Category", y = "Count") +
theme(legend.position = "none") +
coord_flip()
summary_data <- wos_search1 %>%
group_by(SC) %>%
summarize(count = n()) %>%
arrange(desc(count)) %>%
head(count, 15)
# Summarize data to get counts for each category
summary_data <- wos_search1 %>%
group_by(SC) %>%
summarize(count = n()) %>%
arrange(desc(count)) %>%
slice(1:15)
# Create the bar chart
ggplot(summary_data, aes(x = SC, y = count, fill = SC)) +
geom_bar(stat = "identity") +
labs(title = "Bar Chart of Category Counts", x = "Category", y = "Count") +
theme(legend.position = "none") +
coord_flip()
View(summary_data)
summary_data <- wos_search1 %>%
group_by(SC) %>%
summarize(count = n()) %>%
arrange(desc(count))
summary_data <- wos_search1 %>%
group_by(SC) %>%
summarize(count = n()) %>%
arrange(desc(count))
head(summary_data)
View(summary_data)
# Summarize data to get counts for each category
summary_data <- wos_search1 %>%
group_by(WC) %>%
summarize(count = n()) %>%
arrange(desc(count))
# Summarize data to get counts for each category
summary_data <- wos_search1 %>%
group_by(TI) %>%
summarize(count = n()) %>%
arrange(desc(count))
head(summary_data)
# Summarize data to get counts for each category
summary_data <- wos_search1 %>%
group_by(SC) %>%
summarize(count = n()) %>%
arrange(desc(count))
head(summary_data)
# Summarize data to get counts for each category
summary_research_area <- wos_search1 %>%
group_by(SC) %>%
summarize(count = n()) %>%
arrange(desc(count))
head(summary_research_area)
library(bibliometrix)
library(dplyr)
library(openxlsx)
library(ggplot2)
setwd('C:/Users/isabe/Desktop/Tese/Retractions')
####papers_abt_retractions####
wos_retracted_paper1 <- convert2df(file = "./papers_abt_retractions/wos_retracted_paper1.bib", dbsource = "wos", format = "bibtex")
wos_retracted_paper2 <- convert2df(file = "./papers_abt_retractions/wos_retracted_paper2.bib", dbsource = "wos", format = "bibtex")
wos_retracted_publication1 <- convert2df(file = "./papers_abt_retractions/wos_retracted_publication1.bib", dbsource = "wos", format = "bibtex")
wos_search1 <- mergeDbSources(wos_retracted_paper1, wos_retracted_paper2, wos_retracted_publication1, remove.duplicated = TRUE)
summary(wos_search1)
head(wos_search1)
wos_search1 <- dplyr::filter(wos_search1, (!grepl("RETRACTION", DT)) & (!grepl("RETRACTED PUBLICATION", DT)))
#View(wos_search)
#janitor::compare_df_cols(wos_retracted_paper1, wos_search)
write.xlsx(wos_search1, './papers_abt_retractions/wos_unido.xlsx', rowNames=FALSE)
# Summarize data to get counts for each category
summary_research_area <- wos_search1 %>%
group_by(SC) %>%
summarize(count = n()) %>%
arrange(desc(count))
head(summary_research_area)
summary_research_area <- wos_search1 %>%
group_by(LA) %>%
summarize(count = n()) %>%
arrange(desc(count))
head(summary_research_area)
summary_research_area <- wos_search1 %>%
group_by(SC) %>%
summarize(count = n()) %>%
arrange(desc(count))
head(summary_research_area)
summary_language <- wos_search1 %>%
group_by(LA) %>%
summarize(count = n()) %>%
arrange(desc(count))
head(summary_language)
library(bibliometrix)
library(dplyr)
library(openxlsx)
library(ggplot2)
setwd('C:/Users/isabe/Desktop/Tese/Retractions')
####papers_abt_retractions####
wos_retracted_paper1 <- convert2df(file = "./papers_abt_retractions/wos_retracted_paper1.bib", dbsource = "wos", format = "bibtex")
wos_retracted_paper2 <- convert2df(file = "./papers_abt_retractions/wos_retracted_paper2.bib", dbsource = "wos", format = "bibtex")
wos_retracted_publication1 <- convert2df(file = "./papers_abt_retractions/wos_retracted_publication1.bib", dbsource = "wos", format = "bibtex")
wos_search1 <- mergeDbSources(wos_retracted_paper1, wos_retracted_paper2, wos_retracted_publication1, remove.duplicated = TRUE)
summary(wos_search1)
head(wos_search1)
wos_search1 <- dplyr::filter(wos_search1, (!grepl("RETRACTION", DT)) & (!grepl("RETRACTED PUBLICATION", DT)))
#View(wos_search)
#janitor::compare_df_cols(wos_retracted_paper1, wos_search)
write.xlsx(wos_search1, './papers_abt_retractions/wos_unido.xlsx', rowNames=FALSE)
# Summarize data to get counts for each research area
summary_research_area <- wos_search1 %>%
group_by(SC) %>%
summarize(count = n()) %>%
arrange(desc(count))
head(summary_research_area)
#Bibliometrix analysis
resultados <- biblioAnalysis(wos_search1)
dados_sumarizados <- summary(object = resultados, k=20) #(20) qtd de elementos em cada analise
plot(resultados)
biblioshiny()
wos_search1 <- dplyr::filter(wos_search1, PD>'01-01-2023')
wos_search1 <- dplyr::filter(wos_search1, PD>'01-01-2023')
library(bibliometrix)
library(dplyr)
library(openxlsx)
library(ggplot2)
setwd('C:/Users/isabe/Desktop/Tese/Retractions')
####papers_abt_retractions####
wos_retracted_paper1 <- convert2df(file = "./papers_abt_retractions/wos_retracted_paper1.bib", dbsource = "wos", format = "bibtex")
wos_retracted_paper2 <- convert2df(file = "./papers_abt_retractions/wos_retracted_paper2.bib", dbsource = "wos", format = "bibtex")
wos_retracted_publication1 <- convert2df(file = "./papers_abt_retractions/wos_retracted_publication1.bib", dbsource = "wos", format = "bibtex")
wos_search1 <- mergeDbSources(wos_retracted_paper1, wos_retracted_paper2, wos_retracted_publication1, remove.duplicated = TRUE)
summary(wos_search1)
head(wos_search1)
wos_search1 <- dplyr::filter(wos_search1, (!grepl("RETRACTION", DT)) & (!grepl("RETRACTED PUBLICATION", DT))& (!grepl("WITHDRAWAL", DT)))
wos_search1 <- dplyr::filter(wos_search1, PD>'01-01-2023')
colnames(wos_search1)
View(wos_search1)
wos_search1 <- dplyr::filter(wos_search1, PY<'2023')
write.xlsx(wos_search1, './papers_abt_retractions/wos_unido.xlsx', rowNames=FALSE)
# Summarize data to get counts for each research area
summary_research_area <- wos_search1 %>%
group_by(SC) %>%
summarize(count = n()) %>%
arrange(desc(count))
head(summary_research_area)
#Bibliometrix analysis
resultados <- biblioAnalysis(wos_search1)
dados_sumarizados <- summary(object = resultados, k=20) #(20) qtd de elementos em cada analise
plot(resultados)
biblioshiny()
library(bibliometrix)
library(dplyr)
library(openxlsx)
library(ggplot2)
setwd('C:/Users/isabe/Desktop/Tese/Retractions')
####papers_abt_retractions####
wos_retracted_paper1 <- convert2df(file = "./papers_abt_retractions/wos_retracted_paper1.bib", dbsource = "wos", format = "bibtex")
wos_retracted_paper2 <- convert2df(file = "./papers_abt_retractions/wos_retracted_paper2.bib", dbsource = "wos", format = "bibtex")
wos_retracted_publication1 <- convert2df(file = "./papers_abt_retractions/wos_retracted_publication1.bib", dbsource = "wos", format = "bibtex")
wos_search1 <- mergeDbSources(wos_retracted_paper1, wos_retracted_paper2, wos_retracted_publication1, remove.duplicated = TRUE)
summary(wos_search1)
head(wos_search1)
wos_search1 <- dplyr::filter(wos_search1, (!grepl("RETRACTION", DT)) & (!grepl("RETRACTED PUBLICATION", DT))& (!grepl("WITHDRAWAL", DT)))
wos_search1 <- dplyr::filter(wos_search1, PY<'2023')
#View(wos_search)
#janitor::compare_df_cols(wos_retracted_paper1, wos_search)
write.xlsx(wos_search1, './papers_abt_retractions/wos_unido.xlsx', rowNames=FALSE)
# Summarize data to get counts for each research area
summary_research_area <- wos_search1 %>%
group_by(SC) %>%
summarize(count = n()) %>%
arrange(desc(count))
head(summary_research_area)
#Bibliometrix analysis
resultados <- biblioAnalysis(wos_search1)
dados_sumarizados <- summary(object = resultados, k=20) #(20) qtd de elementos em cada analise
plot(resultados)
biblioshiny()
